'use client';

import { useState } from 'react';

export default function ScanPage() {
  const [repositories, setRepositories] = useState<string[]>(['']);
  const [scanType, setScanType] = useState<'full' | 'incremental'>('full');

  const addRepository = () => {
    setRepositories([...repositories, '']);
  };

  const removeRepository = (index: number) => {
    setRepositories(repositories.filter((_, i) => i !== index));
  };

  const updateRepository = (index: number, value: string) => {
    const newRepositories = [...repositories];
    newRepositories[index] = value;
    setRepositories(newRepositories);
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    // Handle form submission here
    console.log('Repositories:', repositories);
    console.log('Scan Type:', scanType);
  };

  return (
    <div className="bg-gradient-to-b from-[#1A237E]/10 to-transparent min-h-screen">
      <div className="container mx-auto px-6 py-8">
        <h1 className="text-3xl font-bold mb-6 text-[#1A237E]">Scan Your Codebase</h1>
        <div className="bg-white shadow-lg rounded-lg p-6">
          <form onSubmit={handleSubmit} className="space-y-6">
            {/* Repository URL inputs */}
            <div className="space-y-4">
              {repositories.map((repo, index) => (
                <div key={index} className="flex items-center gap-4">
                  <div className="flex-grow">
                    <label
                      htmlFor={`repo-${index + 1}`}
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Repository URL
                    </label>
                    <input
                      type="url"
                      id={`repo-${index + 1}`}
                      value={repo}
                      onChange={(e) => updateRepository(index, e.target.value)}
                      placeholder="https://github.com/username/repository"
                      className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#1A237E] focus:border-transparent"
                      required
                    />
                  </div>
                  {repositories.length > 1 && (
                    <button
                      type="button"
                      className="mt-6 p-2 text-red-500 hover:bg-red-50 rounded-full transition-colors"
                      onClick={() => removeRepository(index)}
                      aria-label="Remove repository"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-6 w-6"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
                        />
                      </svg>
                    </button>
                  )}
                  {index === repositories.length - 1 && (
                    <button
                      type="button"
                      className="mt-6 p-2 text-[#1A237E] hover:bg-[#1A237E]/10 rounded-full transition-colors"
                      onClick={addRepository}
                      aria-label="Add another repository"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        className="h-6 w-6"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          strokeWidth={2}
                          d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                        />
                      </svg>
                    </button>
                  )}
                </div>
              ))}
            </div>

            {/* Scan Type Selection */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700 mb-2">Scan Type</label>
              <div className="flex gap-6">
                <div className="flex items-center">
                  <input
                    type="radio"
                    id="full-scan"
                    name="scan-type"
                    value="full"
                    checked={scanType === 'full'}
                    onChange={(e) => setScanType(e.target.value as 'full' | 'incremental')}
                    className="h-4 w-4 text-[#1A237E] focus:ring-[#1A237E]"
                  />
                  <label htmlFor="full-scan" className="ml-2 text-sm text-gray-700">
                    Full Scan
                  </label>
                </div>
                <div className="flex items-center">
                  <input
                    type="radio"
                    id="incremental-scan"
                    name="scan-type"
                    value="incremental"
                    checked={scanType === 'incremental'}
                    onChange={(e) => setScanType(e.target.value as 'full' | 'incremental')}
                    className="h-4 w-4 text-[#1A237E] focus:ring-[#1A237E]"
                  />
                  <label htmlFor="incremental-scan" className="ml-2 text-sm text-gray-700">
                    Incremental Scan
                  </label>
                </div>
              </div>
            </div>

            {/* Submit Button */}
            <button
              type="submit"
              className="w-full bg-[#1A237E] text-white px-8 py-3 rounded-md text-lg font-semibold hover:bg-[#0D1453] transition-colors"
            >
              Start Scan
            </button>
          </form>
        </div>
      </div>
    </div>
  );
}
